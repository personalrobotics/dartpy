#==============================================================================
#
# Arguments that will be appended in-order before command line arguments.
#
#==============================================================================
arguments:
  - "-extra-arg"
  - "-I/usr/lib/clang/3.6/include"

#==============================================================================
#
# Binding
#
#==============================================================================
binding: "pybind11"

#==============================================================================
#
# Template
#
#==============================================================================
template:
  module: !file
    'templates/module.mstch.cpp'
  class: !file
    'templates/class.mstch.cpp'
  enum: !file
    'templates/enum.mstch.cpp'
  function: !file
    'templates/function.mstch.cpp'
  variable: !file
    'templates/variable.mstch.cpp'
  file:
    header: |
      #include <dartpy/pointers.h>
      #include <dartpy/template_registry.h>
      #include <dart/dart.hpp>
      #include <dart/collision/bullet/bullet.hpp>
      // #include <dart/collision/ode/ode.hpp>
      #include <dart/optimizer/optimizer.hpp>
      #include <dart/optimizer/nlopt/nlopt.hpp>
      #include <dart/planning/planning.hpp>
      #include <dart/utils/utils.hpp>
      #include <dart/utils/urdf/urdf.hpp>
      #include <dart/gui/gui.hpp>
    precontent:
      '/* precontent */'
    postinclude:
      '/* postinclude */'
    footer:
      '/* footer */'
    # TODO: Put this at the bottom of the module:
    # dart::python::JointTemplateRegistry::register_default_types();
    # dart::python::JointAndNodeTemplateRegistry::register_default_types();
  main:
    header: |
      #include <vector>
      #include <dartpy/pointers.h>
      #include <dartpy/collections.h>
      #include <dartpy/util.h>
      #include <dart/dart.hpp>
      #include <dart/collision/bullet/bullet.hpp>
      // #include <dart/collision/ode/ode.hpp>
      #include <dart/optimizer/optimizer.hpp>
      #include <dart/optimizer/nlopt/nlopt.hpp>
      #include <dart/planning/planning.hpp>
      #include <dart/utils/utils.hpp>
      #include <dart/utils/urdf/urdf.hpp>
      #include <dart/gui/gui.hpp>
    postinclude:
      '/* main postinclude */'
    prebody:
      '/* main prebody */'
    precontent:
      '/* main precontent */'

#==============================================================================
#
# The C++ namespaces that will be extracted by Chimera
#
#==============================================================================
namespaces:
  'dart':
    name: null  # Collapse the 'dart' namespace into its parent.

#==============================================================================
#
# Selected types that need special handling.
#
#==============================================================================
types:
  'const bool &':
    return_value_policy: reference

#==============================================================================
#
# Selected function and class declarations that need custom parameters.
#
#==============================================================================
classes:
  #----------------------------------------------------------------------------
  # dart::common
  #----------------------------------------------------------------------------

  # TODO(JS): Disabled until nested enumeration issue is resolved.
  # See: https://github.com/personalrobotics/chimera/issues/202
  'dart::common::SharedLibrary': null
  
  'dart::common::ResourceRetriever':
    held_type: std::shared_ptr<dart::common::ResourceRetriever>
  'dart::common::LocalResourceRetriever':
    held_type: std::shared_ptr<dart::common::LocalResourceRetriever>

#==============================================================================
#
# Functions
#
#==============================================================================
functions:
  'size_t dart::common::Resource::read(void *, size_t, size_t)': null
  'size_t dart::common::LocalResource::read(void *, size_t, size_t)': null

  # TODO(JS): Disabled until nested enumeration issue is resolved.
  # See: https://github.com/personalrobotics/chimera/issues/202
  'bool dart::common::Resource::seek(ptrdiff_t, dart::common::Resource::SeekType)': null
